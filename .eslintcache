[{"/Users/omakojidanlamienejoh/Desktop/client/src/index.js":"1","/Users/omakojidanlamienejoh/Desktop/client/src/App.js":"2","/Users/omakojidanlamienejoh/Desktop/client/src/reportWebVitals.js":"3","/Users/omakojidanlamienejoh/Desktop/client/src/components/Navbar.js":"4","/Users/omakojidanlamienejoh/Desktop/client/src/components/Page.js":"5","/Users/omakojidanlamienejoh/Desktop/client/src/components/Pagination.js":"6","/Users/omakojidanlamienejoh/Desktop/client/src/components/Nominate.js":"7","/Users/omakojidanlamienejoh/Desktop/client/src/components/Item.js":"8","/Users/omakojidanlamienejoh/Desktop/client/src/actions.js":"9"},{"size":1306,"mtime":1611966012139,"results":"10","hashOfConfig":"11"},{"size":1877,"mtime":1611967845429,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611370166284,"results":"13","hashOfConfig":"11"},{"size":1919,"mtime":1611968062238,"results":"14","hashOfConfig":"11"},{"size":2207,"mtime":1611966871136,"results":"15","hashOfConfig":"11"},{"size":426,"mtime":1611966907560,"results":"16","hashOfConfig":"11"},{"size":550,"mtime":1611966834170,"results":"17","hashOfConfig":"11"},{"size":1484,"mtime":1611967989034,"results":"18","hashOfConfig":"11"},{"size":485,"mtime":1611968188645,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1ddey7l",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/omakojidanlamienejoh/Desktop/client/src/index.js",["44"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport produce from 'immer'\n\n\n\nconst initialState = {\n  loading: false,\n  post: [],\n  err: null,\n  nomination: []\n}\n\nconst reducer = produce((draft, action) => {\n  switch (action.type) {\n    case 'FETCH_POST_BEGINS':\n      draft.loading = action.loading\n      return\n    case 'FETCH_POST_SUCCESS':\n      draft.loading = false\n      draft.post = action.post\n      return\n    case 'FETCH_POST_ERROR':\n      draft.err = action.err\n      return\n    case 'ADD_NOMINATION':\n      draft.nomination = [...draft.nomination, action.nomination]\n      return\n    case 'DELETE_NOMINATION':\n      const copy = [...draft.nomination];\n      draft.nomination.filter((movie, index) => {\n        if (action.id === index) {\n          copy.splice(action.id, 1)\n          return draft.nomination = copy\n        }\n      })\n      return\n    default:\n      return initialState\n  }\n}, initialState)\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nconsole.log(store.getState())\n",["45","46"],"/Users/omakojidanlamienejoh/Desktop/client/src/App.js",["47"],"import { useState } from 'react'\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navbar'\nimport { connect } from 'react-redux'\nimport Page from './components/Page';\nimport './App.css'\n\n\n\nfunction App({ dispatch, post, loading, err }) {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(20);\n  const [updateInput, setUpdateInput] = useState('')\n\n  const indexOfLastPost = currentPage + postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n\n  const currentPost = post?.records?.profiles?.slice(indexOfFirstPost, indexOfLastPost);\n  console.log(currentPost)\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n\n  const getSearch = (searchInput) => {\n    setUpdateInput(searchInput)\n    console.log(searchInput)\n    return searchInput\n  }\n\n  // const searchResult = () => {\n  //   post?.map((each, i) => {\n  //     if (updateInput.search.length > 0 && each.Firstname === updateInput.search) {\n  //       return <h2 className=\"text-light\" key={i + 1}>{each.FirstName} {each.LastName}</h2>\n  //     }\n  //   })\n  // }\n\n\n  console.log()\n  return (\n    <div className=\"App\">\n      <div className=\"body\">\n        <Navbar dispatch={dispatch} getSearch={getSearch} />\n        {/* <h3 style={{ marginTop: \"20%\" }} className=\"text-dark\"> Mayorwa </h3> */}\n        <div style={{ marginTop: '10%' }}>\n          <div className=\"container\">\n            <div className=\"row\">\n              {console.log(post)}\n              <Page post={currentPost} search={updateInput} loading={loading} err={err} totalPost={post} paginate={paginate} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div >\n  );\n}\n\n\n\nconst mapStateToProps = (state) => ({\n  loading: state.loading,\n  post: state.post,\n  err: state.err\n})\n\n\nexport default connect(mapStateToProps)(App);\n","/Users/omakojidanlamienejoh/Desktop/client/src/reportWebVitals.js",[],"/Users/omakojidanlamienejoh/Desktop/client/src/components/Navbar.js",["48"],"import { useState, useEffect } from 'react';\nimport { getPost } from '../actions'\n\nconst Navbar = ({ post, dispatch, getSearch }) => {\n\n    // state\n    const [input, setInput] = useState('')\n\n    useEffect(() => {\n        dispatch(getPost())\n    }, []);\n\n\n    // handlers\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setInput(() => ({ [name]: value }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        getSearch(input)\n    }\n\n    return (\n        <header className=\"header shadow-lg mb-5\">\n            <div className=\"header__wrap\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"header__content\">\n                                {/* header logo */}\n                                <a href=\"index.html\" className=\"header__logo\">\n                                    <h2 className=\"text-secondary font-weight-bold\">ENYE</h2>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* header search */}\n            <form onSubmit={handleSubmit} className=\"header__search\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"header__search-content\">\n                                <input onChange={handleChange} name='search' type=\"text\" placeholder=\"Search for name\" />\n                                <button type=\"button\">search</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n\n            {/* end header search */}\n        </header>\n\n    )\n}\n\n\nexport default Navbar;","/Users/omakojidanlamienejoh/Desktop/client/src/components/Page.js",["49","50","51","52","53","54"],"import React from 'react';\nimport Pagination from './Pagination'\nimport { connect } from 'react-redux'\nimport Item from './Item'\nimport Nominate from './Nominate';\n\n\nconst Page = ({ loading, post, totalPost, paginate, err, nomination, search }) => {\n\n    console.log(totalPost, post)\n    const pageNumber = [];\n\n    for (let i = 1; i <= Math.ceil(totalPost?.records?.profiles?.length / post?.length); i++) {\n        pageNumber.push(i)\n        console.log(i)\n    }\n\n    console.log(totalPost?.records?.profiles[0].FirstName, '>>>>>>', search?.search)\n\n    const Displaying = () => {\n        if (loading) {\n            return <h2 id=\"loading\" className=\"mx-auto\"></h2>\n        } else if (search.search.length > 1 && totalPost) {\n            <div className=\"t-5 border-0\" style={{ width: '100%', background: 'transparent' }} >\n                {totalPost?.records?.profiles.map((each, i) => {\n                    if (search?.search?.length > 0 && search?.search?.toLowerCase() === each?.FirstName?.toLowerCase()) {\n                        return <h2 className=\"text-light\" key={i + 1}>{each.FirstName} {each.LastName}</h2>\n                    }\n                })\n                }\n            </div>\n        } else {\n            return (\n                <div className=\"t-5 border-0\" style={{ width: '100%', background: 'transparent' }} >\n                    {post?.map((each, index) => <h2 className=\"text-light\" key={index + 1} id={index}>{each.FirstName} {each.LastName}</h2>)}\n                </div>\n            )\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"col-xl-7 col-lg-7 col-md-8 mt-2 pt-5 \">\n                {Displaying()}\n                <div className=\"d-flex\">\n                    {pageNumber.map((num, i) => <ul className=\"px-4 pagination\">\n                        <li key={i + 1} className=\"page-item text-white\">\n                            <button onClick={() => paginate(num)} className=\"page-link\">\n                                <h5 className=\"text-dark text-weight-bold\">{num}</h5>\n                            </button>\n                        </li>\n                    </ul>)}\n                </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default Page;","/Users/omakojidanlamienejoh/Desktop/client/src/components/Pagination.js",[],"/Users/omakojidanlamienejoh/Desktop/client/src/components/Nominate.js",[],"/Users/omakojidanlamienejoh/Desktop/client/src/components/Item.js",["55"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux'\n\nconst Item = ({ movie, id, nomination, dispatch, disable, block }) => {\n\n    console.log(disable)\n    // const [disabled, setDisabled] = useState(false)\n\n    const handleClick = (e) => {\n        console.log(e.target.id)\n        if (nomination.length < 5) {\n            dispatch({ type: 'ADD_NOMINATION', nomination: { movieTitle: movie.Title, movieYear: movie.Year } })\n        }\n    }\n\n\n    return (\n        <>\n            <div className=\"row my-3 py-3 bg-secondary\">\n                <div className=\"col-12 col-sm-12 col-lg-12\">\n                    <div className=\"card--list\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-sm-12\">\n                                <div className=\"card__content\">\n                                    <h2 className=\"d-inline-block card__title pr-3 text-dark\" >{movie.Title}</h2>\n                                    <span className=\"text-dark px-3\">{movie.Year}</span>\n                                    <button onClick={handleClick} className=\"btn btn-lg bg-success text-light\" disabled={block}>Nominate</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nconst mapState = (state) => ({\n    nomination: state.nomination\n})\n\nexport default connect(mapState)(Item);","/Users/omakojidanlamienejoh/Desktop/client/src/actions.js",[],{"ruleId":"56","severity":1,"message":"57","line":36,"column":46,"nodeType":"58","messageId":"59","endLine":36,"endColumn":48},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":23,"nodeType":"66","messageId":"67","endLine":13,"endColumn":37},{"ruleId":"68","severity":1,"message":"69","line":11,"column":8,"nodeType":"70","endLine":11,"endColumn":10,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"72","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":18},{"ruleId":"64","severity":1,"message":"73","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":17},{"ruleId":"64","severity":1,"message":"74","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":12},{"ruleId":"64","severity":1,"message":"75","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":22,"column":20,"nodeType":"78","endLine":22,"endColumn":57},{"ruleId":"56","severity":1,"message":"79","line":25,"column":61,"nodeType":"58","messageId":"59","endLine":25,"endColumn":63},{"ruleId":"64","severity":1,"message":"80","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'setPostPerPage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["83"],"'Pagination' is defined but never used.","'connect' is defined but never used.","'Item' is defined but never used.","'Nominate' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [dispatch]",{"range":"86","text":"87"},[250,252],"[dispatch]"]